name: Update Assets

on:
  schedule:
    - cron: '*/5 * * * *'  # Run every 5 minutes
  workflow_dispatch:  # Allow manual triggering
  push:
    branches: [ main ]  # Run on pushes to main branch
    paths:
      - 'scripts/update-assets.js'
      - '.github/workflows/update-assets.yml'

jobs:
  update-assets:
    runs-on: ubuntu-latest
    timeout-minutes: 10  # Set a timeout for the job
    
    steps:
    - name: Check current time
      run: |
        echo "Current time: $(date)"
        echo "GitHub Actions environment:"
        env | grep GITHUB
        
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Install dependencies
      run: |
        # Install core dependencies first
        npm install @supabase/ssr@0.1.0 cookie@0.5.0 ramda@0.29.1
        # Install remaining dependencies
        npm install --ignore-scripts
        # Skip postinstall scripts for supabase
        npm install --no-save supabase@latest
        
    - name: Run update script
      env:
        NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        CRON_SECRET: ${{ secrets.CRON_SECRET }}
      run: |
        echo "Starting asset update service at $(date)"
        echo "Current branch: $(git branch --show-current)"
        echo "GitHub event: ${{ github.event_name }}"
        # Kill any existing process
        pkill -f "node scripts/update-assets.js" || true
        # Run the script in the background
        nohup node scripts/update-assets.js > update-assets.log 2>&1 &
        # Wait a bit to ensure it started
        sleep 10
        # Check if the process is running
        if ps aux | grep "node scripts/update-assets.js" | grep -v grep; then
          echo "Asset update service is running"
          # Save the PID to a file for future reference
          echo $! > update-assets.pid
          # Show the last few lines of the log
          tail -n 20 update-assets.log
        else
          echo "Failed to start asset update service"
          cat update-assets.log
          exit 1
        fi 